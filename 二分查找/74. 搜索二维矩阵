# leetcode-summary

题目描述（中等）
============

编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。该矩阵具有如下特性：

每行中的整数从左到右按升序排列。
每行的第一个整数大于前一行的最后一个整数。

示例：
输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,50]], target = 3
输出：true

解法一：二分查找
==============

```java
public boolean searchMatrix(int[][] matrix, int target) {
    int m = matrix.length;
    if(m == 0) return false;
    int n = matrix[0].length;
    int left = 0,right = m * n - 1;
    int mid,value;
    while(left <= right){
        mid = (left + right) / 2;
        value = matrix[mid / n][mid % n];
        if(target == value) return true;
        else if(target > value) left = mid + 1;
        else right = mid - 1;}
    return false;}
```

