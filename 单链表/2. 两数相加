# leetcode-summary

题目描述（中等）
============

给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。

请你将两个数相加，并以相同形式返回一个表示和的链表。

你可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：输入：l1 = [2,4,3], l2 = [5,6,4]
输出：[7,0,8]
解释：342 + 465 = 807.

解法一：模拟
==========

```java
public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
    ListNode dummyNode = new ListNode(0);
    ListNode p = l1,q = l2,curr = dummyNode;
    int carry = 0;
    while(p != null || q != null){
        int x = (p != null) ? p.val : 0;
        int y = (q != null) ? q.val : 0;
        int sum = x + y + carry;
        carry /= 10;
        curr.next = new ListNode(sum % 10);
        curr = curr.next;
        if(p != null) p = p.next;
        if(q != null) q = q.next;}
    if(carry > 0){
        curr.next = new ListNode(curry);}
    return dummyNode;}
```

总结：
====

注意哑节点的使用，还有这里输出的是逆序情况，如果需要输出顺序的情况，则需要使用到栈，参考445题。
